#BlueJ class context
comment0.target=TetrisBlock
comment0.text=\r\n\ A\ tetris\ block\ that\ falls\ automatically,\ stops\ when\ it\ hits\ something\r\n\ \r\n\ @author\ Marco\ Calabretta\r\n\ @version\ 2\r\n\ Note**\ there's\ a\ bug\ where\ tetrominos\ dont\ move\ the\ right\ amount\ sideways/rotating\ idk\ if\ the\ bug\ is\ here\ or\ in\ the\ tetromino\ class\ file\r\n
comment1.params=parent\ board\ imageName
comment1.target=TetrisBlock(Tetromino,\ TetrisBoard,\ java.lang.String)
comment1.text=\r\n\ Makes\ a\ new\ block\r\n\ @param\ parent\ is\ the\ tetromino\ the\ block's\ a\ part\ of\r\n\ @param\ board\ is\ the\ world\ the\ block's\ a\ part\ of\r\n\ @param\ imageName\ is\ the\ string\ for\ the\ image\ file\ that\ will\ colour\ this\ block\r\n
comment10.params=
comment10.target=void\ resetVelocity()
comment10.text=\r\n\ resets\ the\ velocity\ of\ all\ tetris\ blocks\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ This\ will\ make\ the\ block\ move,\ then\ checks\ whether\ it\ should\ stop\ or\ end\ the\ game\r\n\ It\ will\ also\ check\ whether\ the\ block\ is\ part\ of\ a\ completed\ line,\ which\ it\ will\ then\ clear\r\n
comment3.params=
comment3.target=void\ stop()
comment3.text=\r\n\ will\ stop\ it's\ parent\ tetromino\ if\ it\ hasn't\ already,\ then\ stop\ the\ block's\ movement\r\n\ and\ round\ its\ y\ position\ back\ to\ the\ nearest\ block\ position\r\n
comment4.params=
comment4.target=boolean\ getMoving()
comment4.text=\r\n\ gets\ the\ moving\ status\ of\ the\ block\r\n\ @return\ the\ current\ moving\ status\r\n
comment5.params=moving
comment5.target=void\ setMoving(boolean)
comment5.text=\r\n\ sets\ the\ moving\ status\ of\ the\ block\r\n\ @param\ moving\ new\ moving\ status\r\n
comment6.params=
comment6.target=Tetromino\ getParent()
comment6.text=\r\n\ returns\ the\ block's\ parent\ tetromino\r\n\ @return\ the\ parent\ tetromino\r\n
comment7.params=newPosition
comment7.target=boolean\ canShiftTo(int[])
comment7.text=\r\n\ This\ method\ checks\ whether\ a\ block\ can\ move\ to\ a\ certain\ position\r\n\ @param\ newPosition\ is\ of\ the\ form\ [x,y]\ describing\ the\ new\ coordinates\ of\ the\ block\ if\ it\ were\ to\ move\r\n\ @return\ whether\ the\ block\ can\ move\r\n
comment8.params=
comment8.target=boolean\ clearLine()
comment8.text=\r\n\ Recursive\ function\ that\ will\ check\ if\ the\ line\ is\ full\ from\ left\ to\ right,\r\n\ then\ clear\ it\ from\ right\ to\ left\r\n\ @return\ whether\ or\ not\ the\ line\ (from\ the\ current\ block\ rightwards)\ is\ full\ and\ should\ be\ cleared.\r\n
comment9.params=
comment9.target=void\ fallFaster()
comment9.text=\r\n\ Still\ a\ clunky\ function,\ but\ it's\ supposed\ to\ increase\ the\ block's\ velocity\ in\ some\r\n\ way\ that\ is\ repeatable\ without\ causing\ problems\r\n
numComments=11
